#!/bin/sh -e
# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a distro-specific continuation of the prepare.sh script.

PKGEXT='deb'
DISTROAKA='debian'

MIRROR=`cat /etc/apt/sources.list | sed -n -e 's/^deb \([^ ]*\) '"$RELEASE"' .*$/\1/p' | head -n 1`

# install_dist: see install() in prepare.sh for details.
install_dist() {
    local pkgs='' params=''
    if [ "$1" = '--minimal' ]; then
        params='--no-install-recommends'
        shift
    fi
    while [ ! "$#" = 0 ]; do
        if [ "$1" = '--' ]; then
            shift
            break
        fi
        pkgs="$pkgs $1"
        shift
    done
    apt-get -y $params install $pkgs `list_uninstalled_dist - "$@"`
}


# install_pkg_dist: see install_pkg() in prepare.sh for details.
install_pkg_dist() {
    local params=''
    if [ "$1" = '--minimal' ]; then
        params='--no-install-recommends'
        shift
    fi
    if [ ! "$#" = 0 ]; then
        dpkg --force-depends -i "$@"
    fi
    apt-get -fy $params install
}


# remove_dist: see remove() in prepare.sh for details.
remove_dist() {
    apt-get -y --purge autoremove "$@"
}


# list_uninstalled_dist: see list_uninstalled() in prepare.sh for details.
list_uninstalled_dist() {
    local suffix="$1" pkg
    shift
    for pkg in "$@"; do
        if ! dpkg-query -s "$pkg" 2>/dev/null >/dev/null; then
            echo -n "$pkg$suffix "
        fi
    done
}


if [ -r /debootstrap ]; then
    echo \
"ERROR: /debootstrap is present in the chroot: You are very probably using a
bootstrap tarball from an old version of crouton. You need to generate a fresh
tarball and restart crouton." 1>&2
    exit 1
fi

# Do any pending configuration, in case of an unfortunately-timed Ctrl-C
dpkg --configure -a

# Fix the keyboard mode early on (this will be called again after dist-upgrade).
fixkeyboardmode
